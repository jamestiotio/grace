package annotation

import "golang.org/x/sys/unix"

var ptraceRequests = map[int]string{
	unix.PTRACE_TRACEME:     "PTRACE_TRACEME",
	unix.PTRACE_PEEKTEXT:    "PTRACE_PEEKTEXT",
	unix.PTRACE_PEEKDATA:    "PTRACE_PEEKDATA",
	unix.PTRACE_PEEKUSR:     "PTRACE_PEEKUSR",
	unix.PTRACE_POKETEXT:    "PTRACE_POKETEXT",
	unix.PTRACE_POKEDATA:    "PTRACE_POKEDATA",
	unix.PTRACE_POKEUSR:     "PTRACE_POKEUSR",
	unix.PTRACE_CONT:        "PTRACE_CONT",
	unix.PTRACE_KILL:        "PTRACE_KILL",
	unix.PTRACE_SINGLESTEP:  "PTRACE_SINGLESTEP",
	unix.PTRACE_GETREGS:     "PTRACE_GETREGS",
	unix.PTRACE_SETREGS:     "PTRACE_SETREGS",
	unix.PTRACE_GETFPREGS:   "PTRACE_GETFPREGS",
	unix.PTRACE_SETFPREGS:   "PTRACE_SETFPREGS",
	unix.PTRACE_ATTACH:      "PTRACE_ATTACH",
	unix.PTRACE_DETACH:      "PTRACE_DETACH",
	unix.PTRACE_GETFPXREGS:  "PTRACE_GETFPXREGS",
	unix.PTRACE_SETFPXREGS:  "PTRACE_SETFPXREGS",
	unix.PTRACE_SYSCALL:     "PTRACE_SYSCALL",
	unix.PTRACE_SETOPTIONS:  "PTRACE_SETOPTIONS",
	unix.PTRACE_GETEVENTMSG: "PTRACE_GETEVENTMSG",
	unix.PTRACE_GETSIGINFO:  "PTRACE_GETSIGINFO",
	unix.PTRACE_SETSIGINFO:  "PTRACE_SETSIGINFO",
	unix.PTRACE_GETREGSET:   "PTRACE_GETREGSET",
	unix.PTRACE_SETREGSET:   "PTRACE_SETREGSET",
	unix.PTRACE_SEIZE:       "PTRACE_SEIZE",
	unix.PTRACE_INTERRUPT:   "PTRACE_INTERRUPT",
	unix.PTRACE_LISTEN:      "PTRACE_LISTEN",
	unix.PTRACE_PEEKSIGINFO: "PTRACE_PEEKSIGINFO",
	unix.PTRACE_GETSIGMASK:  "PTRACE_GETSIGMASK",
	unix.PTRACE_SETSIGMASK:  "PTRACE_SETSIGMASK",
}

func AnnotatePtraceRequest(arg Arg, _ int) {
	if name, ok := ptraceRequests[int(arg.Raw())]; ok {
		arg.SetAnnotation(name, true)
	}
}
